using System;
/* Методы расширения 
Методы расширения (extension methods) позволяют добавлять новые методы в уже 
существующие типы без создания нового производного класса. Эта функциональность 
бывает особенно полезна, когда нам хочется добавить в некоторый тип новый метод, 
но сам тип (класс или структуру) мы изменить не можем, поскольку у нас нет доступа 
к исходному коду. Либо если мы не можем использовать стандартный механизм наследования, 
например, если классы определенны с модификатором sealed.*/

namespace ExtensionMethods
{
    class Program
    {
        static void Main()
        {
            string s = "Привет мир";
            char c = 'и';
            int i = s.CharCount(c);
            Console.WriteLine(i);
            
        }
    }
    /* Для того, чтобы создать метод расширения, вначале надо создать статический класс
     * который и будет содержать этот метод. В данном случае это класс StringExtension. 
     * Затем объявляем статический метод. Суть нашего метода расширения - подсчет 
     * количества определенных символов в строке. */
    public static class StringExtension
    {
        /* Собственно метод расширения - это обычный статический метод, 
         * который в качестве первого параметра всегда принимает такую 
         * конструкцию: this имя_типа название_параметра, то есть в нашем случае
         * this string str. Так как наш метод будет относиться к типу string, то мы и 
         * используем данный тип. */
        public static int CharCount(this string str, char c)
        {
            int counter = 0;
            for (int i=0; i<str.Length;i++)
            {
                if (str[i] == c)
                    counter++;
            }
            return counter;
        }
    }
}
